type: k8s/container

sem_conv_version: 1.18.0

parent: k8s_cluster

resource_attributes:
  container.id:
    description: The container id.
    type: string
    enabled: true

  container.image.name:
    description: The container image name
    type: string
    enabled: true

  container.image.tag:
    description: The container image tag
    type: string
    enabled: true

  k8s.container.name:
    description: The k8s container name
    type: string
    enabled: true

  k8s.namespace.name:
    description: The k8s namespace name
    type: string
    enabled: true

  k8s.node.name:
    description: The k8s node name
    type: string
    enabled: true

  k8s.pod.name:
    description: The k8s pod name
    type: string
    enabled: true

  k8s.pod.uid:
    description: The k8s pod uid
    type: string
    enabled: true

  opencensus.resourcetype:
    description: The OpenCensus resource type.
    type: string
    enabled: true

metrics:
  k8s.container.cpu_request:
    enabled: true
    description: Resource requested for the container. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#resourcerequirements-v1-core for details
    unit: "{cpu}"
    gauge:
      value_type: double
  k8s.container.cpu_limit:
    enabled: true
    description: Maximum resource limit set for the container. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#resourcerequirements-v1-core for details
    unit: "{cpu}"
    gauge:
      value_type: double
  k8s.container.memory_request:
    enabled: true
    description: Resource requested for the container. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#resourcerequirements-v1-core for details
    unit: "By"
    gauge:
      value_type: int
  k8s.container.memory_limit:
    enabled: true
    description: Maximum resource limit set for the container. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#resourcerequirements-v1-core for details
    unit: "By"
    gauge:
      value_type: int
  k8s.container.storage_request:
    enabled: true
    description: Resource requested for the container. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#resourcerequirements-v1-core for details
    unit: "By"
    gauge:
      value_type: int
  k8s.container.storage_limit:
    enabled: true
    description: Maximum resource limit set for the container. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#resourcerequirements-v1-core for details
    unit: "By"
    gauge:
      value_type: int
  k8s.container.ephemeralstorage_request:
    enabled: true
    description: Resource requested for the container. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#resourcerequirements-v1-core for details
    unit: "By"
    gauge:
      value_type: int
  k8s.container.ephemeralstorage_limit:
    enabled: true
    description: Maximum resource limit set for the container. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#resourcerequirements-v1-core for details
    unit: "By"
    gauge:
      value_type: int
  k8s.container.restarts:
    enabled: true
    description: How many times the container has restarted in the recent past. This value is pulled directly from the K8s API and the value can go indefinitely high and be reset to 0 at any time depending on how your kubelet is configured to prune dead containers. It is best to not depend too much on the exact value but rather look at it as either == 0, in which case you can conclude there were no restarts in the recent past, or > 0, in which case you can conclude there were restarts in the recent past, and not try and analyze the value beyond that.
    unit: 1
    gauge:
      value_type: int
  k8s.container.ready:
    enabled: true
    description: Whether a container has passed its readiness probe (0 for no, 1 for yes)
    unit: 1
    gauge:
      value_type: int